plugins {
    id 'eclipse'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

file("../gradle.properties").withInputStream {
    def props = new Properties()
    props.load(it)
    props.each { prop -> project.ext.set(prop.key, prop.value) }
}

version = mod_version
group = maven_group

base {
    archivesName = "${mod_name}-${minecraft_version}-forge"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

eclipse {
    project { name = "${mod_name}-${minecraft_version}-forge" }
}

minecraft {
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    mappings channel: 'official', version: minecraft_version

    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('../run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                "${mod_name}" {
                    source sourceSets.main
                }
            }
        }

        client {
        }

        server {
        }
    }
}

sourceSets.main.java { srcDir '../src/main/java' }
sourceSets.main.resources { srcDir '../src/main/resources' }

dependencies {
    minecraft "net.minecraftforge:forge:${forge_version}"
}

tasks.named('processResources', ProcessResources).configure {
    filesMatching('META-INF/mods.toml') {
        expand [
            mod_version: mod_version,
        ]
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
